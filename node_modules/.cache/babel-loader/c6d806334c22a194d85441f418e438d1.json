{"ast":null,"code":"import actionTypes from './actionTypes';\nimport { getAllCodeService } from '../../services/userService';\n\n// export const fetchGenderStart = () => ({\n//     type: actionTypes.FETCH_GENDER_START\n// })\n\nexport const fetchGenderStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_GENDER_START\n      });\n      let res = await getAllCodeService(\"GENDER\");\n      if (res && res.errCode === 0) {\n        dispatch(fetchGenderSuccess(res.data));\n      } else {\n        dispatch(fetchGenderFailed());\n      }\n    } catch (e) {\n      dispatch(fetchGenderFailed());\n      // console.log('fetchGenderStart error: ', e)\n    }\n  };\n};\nexport const fetchGenderSuccess = genderData => ({\n  type: actionTypes.FETCH_GENDER_SUCCESS,\n  data: genderData\n});\nexport const fetchGenderFailed = () => ({\n  type: actionTypes.FETCH_GENDER_FAILED\n});\nexport const fetchPositionSuccess = positionData => ({\n  type: actionTypes.FETCH_POSITION_SUCCESS,\n  data: positionData\n});\nexport const fetchPositionFailed = () => ({\n  type: actionTypes.FETCH_POSITION_FAILED\n});\nexport const fetchRoleSuccess = roleData => ({\n  type: actionTypes.FETCH_ROLE_SUCCESS,\n  data: roleData\n});\nexport const fetchRoleFailed = () => ({\n  type: actionTypes.FETCH_ROLE_FAILED\n});\nexport const fetchPositionStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllCodeService(\"POSITION\");\n      if (res && res.errCode === 0) {\n        dispatch(fetchPositionSuccess(res.data));\n      } else {\n        dispatch(fetchPositionFailed());\n      }\n    } catch (e) {\n      dispatch(fetchGenderFailed());\n      // console.log('fetchGenderStart error: ', e)\n    }\n  };\n};\nexport const fetchRoleStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllCodeService(\"POSITION\");\n      if (res && res.errCode === 0) {\n        dispatch(fetchPositionSuccess(res.data));\n      } else {\n        dispatch(fetchPositionFailed());\n      }\n    } catch (e) {\n      dispatch(fetchGenderFailed());\n      // console.log('fetchGenderStart error: ', e)\n    }\n  };\n};","map":{"version":3,"names":["actionTypes","getAllCodeService","fetchGenderStart","dispatch","getState","type","FETCH_GENDER_START","res","errCode","fetchGenderSuccess","data","fetchGenderFailed","e","genderData","FETCH_GENDER_SUCCESS","FETCH_GENDER_FAILED","fetchPositionSuccess","positionData","FETCH_POSITION_SUCCESS","fetchPositionFailed","FETCH_POSITION_FAILED","fetchRoleSuccess","roleData","FETCH_ROLE_SUCCESS","fetchRoleFailed","FETCH_ROLE_FAILED","fetchPositionStart","fetchRoleStart"],"sources":["D:/Frontend-React.JS-QuickStart/src/store/actions/adminActions.js"],"sourcesContent":["import actionTypes from './actionTypes';\r\nimport { getAllCodeService } from '../../services/userService';\r\n\r\n// export const fetchGenderStart = () => ({\r\n//     type: actionTypes.FETCH_GENDER_START\r\n// })\r\n\r\nexport const fetchGenderStart = () => {\r\n    return async(dispatch, getState) =>{\r\n        try {\r\n            dispatch({\r\n                type: actionTypes.FETCH_GENDER_START })\r\n\r\n            let res = await getAllCodeService(\"GENDER\");\r\n            if (res && res.errCode === 0) {\r\n                dispatch(fetchGenderSuccess(res.data))\r\n            } else {\r\n                dispatch(fetchGenderFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(fetchGenderFailed());\r\n            // console.log('fetchGenderStart error: ', e)\r\n        }\r\n    }\r\n  \r\n}\r\n\r\nexport const fetchGenderSuccess = (genderData) => ({\r\n    type: actionTypes.FETCH_GENDER_SUCCESS,\r\n    data: genderData\r\n})\r\n\r\nexport const fetchGenderFailed = () => ({\r\n    type: actionTypes.FETCH_GENDER_FAILED\r\n})\r\n\r\nexport const fetchPositionSuccess = (positionData) => ({\r\n    type: actionTypes.FETCH_POSITION_SUCCESS,\r\n    data: positionData\r\n})\r\n\r\nexport const fetchPositionFailed = () => ({\r\n    type: actionTypes.FETCH_POSITION_FAILED\r\n})\r\n\r\nexport const fetchRoleSuccess = (roleData) => ({\r\n    type: actionTypes.FETCH_ROLE_SUCCESS,\r\n    data: roleData\r\n})\r\n\r\nexport const fetchRoleFailed = () => ({\r\n    type: actionTypes.FETCH_ROLE_FAILED\r\n})\r\n\r\nexport const fetchPositionStart = () => {\r\n    return async(dispatch, getState) =>{\r\n        try {\r\n            let res = await getAllCodeService(\"POSITION\");\r\n            if (res && res.errCode === 0) {\r\n                dispatch(fetchPositionSuccess(res.data))\r\n            } else {\r\n                dispatch(fetchPositionFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(fetchGenderFailed());\r\n            // console.log('fetchGenderStart error: ', e)\r\n        }\r\n    }\r\n  \r\n}\r\n\r\nexport const fetchRoleStart = () => {\r\n    return async(dispatch, getState) =>{\r\n        try {\r\n            let res = await getAllCodeService(\"POSITION\");\r\n            if (res && res.errCode === 0) {\r\n                dispatch(fetchPositionSuccess(res.data))\r\n            } else {\r\n                dispatch(fetchPositionFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(fetchGenderFailed());\r\n            // console.log('fetchGenderStart error: ', e)\r\n        }\r\n    }\r\n  \r\n}\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,SAASC,iBAAiB,QAAQ,4BAA4B;;AAE9D;AACA;AACA;;AAEA,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAClC,OAAO,OAAMC,QAAQ,EAAEC,QAAQ,KAAI;IAC/B,IAAI;MACAD,QAAQ,CAAC;QACLE,IAAI,EAAEL,WAAW,CAACM;MAAmB,CAAC,CAAC;MAE3C,IAAIC,GAAG,GAAG,MAAMN,iBAAiB,CAAC,QAAQ,CAAC;MAC3C,IAAIM,GAAG,IAAIA,GAAG,CAACC,OAAO,KAAK,CAAC,EAAE;QAC1BL,QAAQ,CAACM,kBAAkB,CAACF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC1C,CAAC,MAAM;QACHP,QAAQ,CAACQ,iBAAiB,CAAC,CAAC,CAAC;MACjC;IACJ,CAAC,CAAC,OAAOC,CAAC,EAAE;MACRT,QAAQ,CAACQ,iBAAiB,CAAC,CAAC,CAAC;MAC7B;IACJ;EACJ,CAAC;AAEL,CAAC;AAED,OAAO,MAAMF,kBAAkB,GAAII,UAAU,KAAM;EAC/CR,IAAI,EAAEL,WAAW,CAACc,oBAAoB;EACtCJ,IAAI,EAAEG;AACV,CAAC,CAAC;AAEF,OAAO,MAAMF,iBAAiB,GAAGA,CAAA,MAAO;EACpCN,IAAI,EAAEL,WAAW,CAACe;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMC,oBAAoB,GAAIC,YAAY,KAAM;EACnDZ,IAAI,EAAEL,WAAW,CAACkB,sBAAsB;EACxCR,IAAI,EAAEO;AACV,CAAC,CAAC;AAEF,OAAO,MAAME,mBAAmB,GAAGA,CAAA,MAAO;EACtCd,IAAI,EAAEL,WAAW,CAACoB;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMC,gBAAgB,GAAIC,QAAQ,KAAM;EAC3CjB,IAAI,EAAEL,WAAW,CAACuB,kBAAkB;EACpCb,IAAI,EAAEY;AACV,CAAC,CAAC;AAEF,OAAO,MAAME,eAAe,GAAGA,CAAA,MAAO;EAClCnB,IAAI,EAAEL,WAAW,CAACyB;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EACpC,OAAO,OAAMvB,QAAQ,EAAEC,QAAQ,KAAI;IAC/B,IAAI;MACA,IAAIG,GAAG,GAAG,MAAMN,iBAAiB,CAAC,UAAU,CAAC;MAC7C,IAAIM,GAAG,IAAIA,GAAG,CAACC,OAAO,KAAK,CAAC,EAAE;QAC1BL,QAAQ,CAACa,oBAAoB,CAACT,GAAG,CAACG,IAAI,CAAC,CAAC;MAC5C,CAAC,MAAM;QACHP,QAAQ,CAACgB,mBAAmB,CAAC,CAAC,CAAC;MACnC;IACJ,CAAC,CAAC,OAAOP,CAAC,EAAE;MACRT,QAAQ,CAACQ,iBAAiB,CAAC,CAAC,CAAC;MAC7B;IACJ;EACJ,CAAC;AAEL,CAAC;AAED,OAAO,MAAMgB,cAAc,GAAGA,CAAA,KAAM;EAChC,OAAO,OAAMxB,QAAQ,EAAEC,QAAQ,KAAI;IAC/B,IAAI;MACA,IAAIG,GAAG,GAAG,MAAMN,iBAAiB,CAAC,UAAU,CAAC;MAC7C,IAAIM,GAAG,IAAIA,GAAG,CAACC,OAAO,KAAK,CAAC,EAAE;QAC1BL,QAAQ,CAACa,oBAAoB,CAACT,GAAG,CAACG,IAAI,CAAC,CAAC;MAC5C,CAAC,MAAM;QACHP,QAAQ,CAACgB,mBAAmB,CAAC,CAAC,CAAC;MACnC;IACJ,CAAC,CAAC,OAAOP,CAAC,EAAE;MACRT,QAAQ,CAACQ,iBAAiB,CAAC,CAAC,CAAC;MAC7B;IACJ;EACJ,CAAC;AAEL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}