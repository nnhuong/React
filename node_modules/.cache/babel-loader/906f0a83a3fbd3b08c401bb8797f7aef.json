{"ast":null,"code":"import axios from 'axios';\n// import _ from 'lodash';\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  withCredentials: true\n});\n\n// const createError = (httpStatusCode, statusCode, errorMessage, problems, errorCode = '') => {\n//     const error = new Error();\n//     error.httpStatusCode = httpStatusCode;\n//     error.statusCode = statusCode;\n//     error.errorMessage = errorMessage;\n//     error.problems = problems;\n//     error.errorCode = errorCode + \"\";\n//     return error;\n// };\n\n// export const isSuccessStatusCode = (s) => {\n//     // May be string or number\n//     const statusType = typeof s;\n//     return (statusType === 'number' && s === 0) || (statusType === 'string' && s.toUpperCase() === 'OK');\n// };\n\ninstance.interceptors.response.use(response => {\n  const {\n    data\n  } = response;\n  return response.data;\n});\n\n// instance.interceptors.response.use(\n//     (response) => {\n//         // Thrown error for request with OK status code\n//         const { data } = response;\n//         if (data.hasOwnProperty('s') && !isSuccessStatusCode(data['s']) && data.hasOwnProperty('errmsg')) {\n//             return Promise.reject(createError(response.status, data['s'], data['errmsg'], null, data['errcode'] ? data['errcode'] : \"\"));\n//         }\n\n//         // Return direct data to callback\n//         if (data.hasOwnProperty('s') && data.hasOwnProperty('d')) {\n//             return data['d'];\n//         }\n//         // Handle special case\n//         if (data.hasOwnProperty('s') && _.keys(data).length === 1) {\n//             return null;\n//         }\n//         return response.data;\n//     },\n//     (error) => {\n// const { response } = error;\n// if (response == null) {\n//     return Promise.reject(error);\n// }\n\n// const { data } = response;\n\n// if (data.hasOwnProperty('s') && data.hasOwnProperty('errmsg')) {\n//     return Promise.reject(createError(response.status, data['s'], data['errmsg']));\n// }\n\n// if (data.hasOwnProperty('code') && data.hasOwnProperty('message')) {\n//     return Promise.reject(createError(response.status, data['code'], data['message'], data['problems']));\n// }\n\n// return Promise.reject(createError(response.status));\n//     }\n// );\n\nexport default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","process","env","REACT_APP_BACKEND_URL","withCredentials","interceptors","response","use","data"],"sources":["D:/Frontend-React.JS-QuickStart/src/axios.js"],"sourcesContent":["import axios from 'axios';\r\n// import _ from 'lodash';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    withCredentials: true\r\n});\r\n\r\n// const createError = (httpStatusCode, statusCode, errorMessage, problems, errorCode = '') => {\r\n//     const error = new Error();\r\n//     error.httpStatusCode = httpStatusCode;\r\n//     error.statusCode = statusCode;\r\n//     error.errorMessage = errorMessage;\r\n//     error.problems = problems;\r\n//     error.errorCode = errorCode + \"\";\r\n//     return error;\r\n// };\r\n\r\n// export const isSuccessStatusCode = (s) => {\r\n//     // May be string or number\r\n//     const statusType = typeof s;\r\n//     return (statusType === 'number' && s === 0) || (statusType === 'string' && s.toUpperCase() === 'OK');\r\n// };\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        const { data } = response;\r\n        return response.data;\r\n    }\r\n);\r\n\r\n// instance.interceptors.response.use(\r\n//     (response) => {\r\n//         // Thrown error for request with OK status code\r\n//         const { data } = response;\r\n//         if (data.hasOwnProperty('s') && !isSuccessStatusCode(data['s']) && data.hasOwnProperty('errmsg')) {\r\n//             return Promise.reject(createError(response.status, data['s'], data['errmsg'], null, data['errcode'] ? data['errcode'] : \"\"));\r\n//         }\r\n\r\n//         // Return direct data to callback\r\n//         if (data.hasOwnProperty('s') && data.hasOwnProperty('d')) {\r\n//             return data['d'];\r\n//         }\r\n//         // Handle special case\r\n//         if (data.hasOwnProperty('s') && _.keys(data).length === 1) {\r\n//             return null;\r\n//         }\r\n//         return response.data;\r\n//     },\r\n//     (error) => {\r\n        // const { response } = error;\r\n        // if (response == null) {\r\n        //     return Promise.reject(error);\r\n        // }\r\n\r\n        // const { data } = response;\r\n\r\n        // if (data.hasOwnProperty('s') && data.hasOwnProperty('errmsg')) {\r\n        //     return Promise.reject(createError(response.status, data['s'], data['errmsg']));\r\n        // }\r\n\r\n        // if (data.hasOwnProperty('code') && data.hasOwnProperty('message')) {\r\n        //     return Promise.reject(createError(response.status, data['code'], data['message'], data['problems']));\r\n        // }\r\n\r\n        // return Promise.reject(createError(response.status));\r\n//     }\r\n// );\r\n\r\nexport default instance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC1BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,qBAAqB;EAC1CC,eAAe,EAAE;AACrB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEAN,QAAQ,CAACO,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC7BD,QAAQ,IAAK;EACV,MAAM;IAAEE;EAAK,CAAC,GAAGF,QAAQ;EACzB,OAAOA,QAAQ,CAACE,IAAI;AACxB,CACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACR;AACA;;AAEA,eAAeV,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}